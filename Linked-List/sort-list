/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* getList(ListNode* first, ListNode* last)
    {
        if(first == NULL || first->next == NULL)return first;
        ListNode *slow = first;
        ListNode *fast = first->next;
        
        while(fast && fast->next)
        {
            slow = slow->next;
            fast = fast->next->next;
        }
        
        fast = slow->next;
        slow->next = NULL;
        
        ListNode* head1 = getList(first, NULL);
        ListNode* head2 = getList(fast, last);
        
        ListNode* dy = new ListNode(0);
        ListNode* p = dy;
        while(head1 != NULL && head2 != NULL)
        {
            if(head1->val < head2->val)
            {
                p->next = head1;
                p = p->next;
                head1 = head1->next;
            }
            else
            {
                p->next = head2;
                p = p->next;
                head2 = head2->next;
            }
        }   
        if(head1)
            p->next = head1;
        if(head2)
            p->next = head2;
            
        p = dy->next;
        delete dy;
        return p;
        
    }
    ListNode* sortList(ListNode* head) {
        if(!head || !head->next)return head;
        
        return getList(head, NULL);
    }
};
