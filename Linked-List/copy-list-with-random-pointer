/**
 * Definition for singly-linked list with a random pointer.
 * struct RandomListNode {
 *     int label;
 *     RandomListNode *next, *random;
 *     RandomListNode(int x) : label(x), next(NULL), random(NULL) {}
 * };
 */
class Solution {
public:
    RandomListNode *copyRandomList(RandomListNode *head) {
        if(!head)return NULL;
        
        RandomListNode* p = head;
        
        while(p)
        {
            RandomListNode* newNode = new RandomListNode(p->label);
            RandomListNode* temp = p->next;
            
            newNode->next = temp;
            p->next = newNode;
            
            p = p->next->next;
        }//copy each node
        
        p = head;
        while(p)
        {
            if(p->random)
                p->next->random = p->random->next;
            p = p->next->next;
        }//copy random pointer
        
        p = head;
       
        RandomListNode *dy = new RandomListNode(0);
        RandomListNode *q = dy;
        
        while(p)
        {
            RandomListNode *temp = p->next;
            p->next = temp->next;
            
            q->next = temp;
            q = q->next;
            
            p = p->next;
        }
        return dy->next;
        
    }
};
