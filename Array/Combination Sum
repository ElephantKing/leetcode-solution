class Solution {
public:
    void getR(vector<int>& candidates, vector<vector<int> >& res, vector<int>& temp, int target, int start)
    {
        if(target == 0)
        {
            res.push_back(temp);
            return;
        }
        for(int i = start; i < candidates.size(); ++i)
        {
            if(target >= candidates[i])
            {
                temp.push_back(candidates[i]);
                getR(candidates, res, temp, target - candidates[i], i);
                temp.pop_back();
            }
        }
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<int> temp;
        vector<vector<int> > res;
        sort(candidates.begin(), candidates.end());
        getR(candidates, res, temp, target, 0);
        return res;
    }
};
