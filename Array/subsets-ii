class Solution {
public:
    void getR(vector<int>& nums, vector<vector<int> >& res, vector<int> &temp, int start)
    {
        res.push_back(temp);
        for(int i = start; i < nums.size(); ++i)
        {
            temp.push_back(nums[i]);
            getR(nums, res, temp, i + 1);
            temp.pop_back();
            while(i + 1 < nums.size() && nums[i] == nums[i + 1])++i;
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        vector<int> temp;
        vector<vector<int> > res;
        sort(nums.begin(), nums.end());
        getR(nums, res, temp, 0);
        return res;
    }
};
