/**
 * Definition for an interval.
 * struct Interval {
 *     int start;
 *     int end;
 *     Interval() : start(0), end(0) {}
 *     Interval(int s, int e) : start(s), end(e) {}
 * };
 */
class Solution {
public:
    static bool cmp(Interval a,Interval b)
    {
        return a.start < b.start;
    }
    vector<Interval> merge(vector<Interval>& intervals) {
        vector<Interval> result;
        int len = intervals.size();
        if(len <= 0)return result;
        sort(intervals.begin(),intervals.end(),cmp);
        Interval temp = intervals[0];
        for(int i = 0; i < len; ++i)
        {
            if(temp.start > intervals[i].end || temp.end < intervals[i].start)
            {
                result.push_back(temp);
                temp = intervals[i];
            }
            else
            {
                temp.start = min(temp.start,intervals[i].start);
                temp.end = max(temp.end,intervals[i].end);
            }
        }
        result.push_back(temp);
        return result;
    }
};
